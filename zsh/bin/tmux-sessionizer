#!/usr/bin/env bash

set -o pipefail

if [[ $# -gt 0 ]]; then
    selected=$1
    shift

    if [ -d "$selected/../.bare" ]; then
        # If this parent directory for the selected directory is a bare git repository,
        # prepend the parent directory to the selected directory.
        selected_session=$(basename "$(dirname "$selected")")/$(basename "$selected")
        selected_session=$(tr . _ <<<"$selected_session")
    else
        selected_session=$(basename "$selected" | tr . _)
    fi
else
    current_session=$(tmux display-message -p | sed -e 's/^\[//' -e 's/\].*//')
    current_session=$(tr _ . <<<"$current_session")

    sessions=()

    while IFS=$'\n' read -r line; do
        # If this line is a bare git repository, skip it
        if [[ -d "$line/.bare" ]]; then
            continue
        # If this line is a directory inside a bare git repository, add it
        elif [ -d "$line"/../.bare ]; then
            # Bash variable substitution
            # From: https://stackoverflow.com/questions/22401091/bash-variable-substitution-vs-dirname-and-basename
            dir=${line%/*}
            dir_base=${dir##*/}
            sessions+=("$dir_base/${line##*/}")
        # If the parent directory of the current line is TMUX_CURRENT_DIR we add this line
        elif [[ "${line%/*}" == "$TMUX_CURRENT_DIR" ]]; then
            sessions+=("${line##*/}")
        fi
    done < <(find "$TMUX_CURRENT_DIR" -mindepth 1 -maxdepth 2 -type d -not -name '.*')

    # From: https://www.baeldung.com/linux/sort-bash-arrays
    readarray -td '' sessions < <(printf '%s\0' "${sessions[@]}" | sort -z)

    # shellcheck disable=SC2086
    selected=$(printf "%s\n" "${sessions[@]}" | "$HOME"/.tmux/plugins/tmux-fzf/scripts/.fzf-tmux --header='Select target session.' $TMUX_FZF_OPTIONS)
    selected_session=$(tr . _ <<<"$selected")

    # If this is a relative path, prepend it with $TMUX_CURRENT_DIR
    if [[ -n $selected ]] && [[ "${selected:0:1}" != "/" ]]; then
        selected="$TMUX_CURRENT_DIR/$selected"
    fi
fi

if [[ -z $selected ]]; then
    exit 0
fi

tmux_running=$(pgrep tmux)

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    tmux new-session -s "$selected_session" -c "$selected"
    tmux-update-active-sessions &
    exit 0
fi

if ! tmux has-session -t="$selected_session" 2>/dev/null; then
    tmux new-session -ds "$selected_session" -c "$selected"
fi

if [[ $# -gt 0 ]]; then
    tmux new-window -c "#{pane_current_path}" -t "$selected_session":
    tmux send-keys -t "$selected_session": "$*" ENTER
fi

tmux switch-client -t "$selected_session"
tmux-update-active-sessions &
