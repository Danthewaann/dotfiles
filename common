#!/usr/bin/env bash

# Everything in this script is available to all script files

set -eo pipefail

BASE_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

export LOG_FILE="$BASE_DIR/debug.log"

info () {
    local cur_date
    cur_date=$(get_date)
    printf "\r%s [ \033[00;34m..\033[0m ] %s\n" "$cur_date" "$1"
}

warn () {
    local cur_date
    cur_date=$(get_date)
    printf "\r%s [\033[0;33mWARN\033[0m] %s\n" "$cur_date" "$1"
}

user () {
    local cur_date
    cur_date=$(get_date)
    printf "\r%s [ \033[0;33m??\033[0m ] %s\n" "$cur_date" "$1"
}

success () {
    local cur_date
    cur_date=$(get_date)
    printf "\r\033[2K%s [ \033[00;32mOK\033[0m ] %s\n" "$cur_date" "$1"
}

fail () {
    local cur_date
    cur_date=$(get_date)
    printf "\r\033[2K%s [\033[0;31mFAIL\033[0m] %s\n" "$cur_date" "$1"
    exit 1
}

log_to_file () {
    local cur_date
    cur_date=$(get_date)
    printf "%s [ %s ] %s\n" "$cur_date" "$1" "$2" >> "$LOG_FILE"

}

get_date () {
    date +"%Y-%m-%dT%H:%M:%S%z"
}

run_command () {
    local msg=$1; shift

    info "$msg"
    info "~~~~~~~~~~~~~~~~~~~~~~~~"
    while [[ $# -gt 0 ]]; do
        if ! eval "$1" 2>&1 | while IFS= read -r line; do info "$line"; done; then
            info ""
            fail "failed!"
        fi
        shift
    done
    info ""
    success "done!"
    info ""
}

link_file () {
    local src=$1 dst=$2

    local overwrite=
    local backup=
    local skip=
    local action=
    local currentSrc=

    if [ -f "$dst" ] || [ -d "$dst" ] || [ -L "$dst" ]; then
        if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]; then
            if ! currentSrc="$(readlink "$dst")"; then true; fi

            if [ "$currentSrc" == "$src" ]; then
                skip=true
            else
                user "File already exists: $dst ($(basename "$src")), what do you want to do?"
                user "[s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
                read -r -n 1 action

                case "$action" in
                    o )
                    overwrite=true
                    ;;
                    O )
                    overwrite_all=true
                    ;;
                    b )
                    backup=true
                    ;;
                    B )
                    backup_all=true
                    ;;
                    s )
                    skip=true
                    ;;
                    S )
                    skip_all=true
                    ;;
                    * )
                    ;;
                esac
            fi
        fi

        overwrite=${overwrite:-$overwrite_all}
        backup=${backup:-$backup_all}
        skip=${skip:-$skip_all}

        if [ "$overwrite" == "true" ]; then
            rm -rf "$dst"
            success "removed $dst"
        fi

        if [ "$backup" == "true" ]; then
            mv "$dst" "${dst}.backup"
            success "moved $dst to ${dst}.backup"
        fi

        if [ "$skip" == "true" ]; then
            success "skipped $src"
        fi
    fi

    if [ "$skip" != "true" ]; then  # "false" or empty
        ln -s "$1" "$2"
        success "linked $1 to $2"
    fi
}

# Check if we are running under WSL (Windows Subsystem for Linux)
inside_wsl () {
    [ -f /proc/sys/fs/binfmt_misc/WSLInterop ]
}

load_variables() {
    if [[ ! -f $BASE_DIR/variables ]]; then
        create=false
        user "variables file not created, create it from variables.example?"
        user "[y]es, [n]o?"
        read -r -n 1 action

        case "$action" in
            y )
                create=true
                ;;
            n )
                create=false
                ;;
            * )
                ;;
        esac

        if [[ "$create" = "true" ]]; then
            cp "$BASE_DIR/variables.example" "$BASE_DIR/variables"
        else
            return 1
        fi
    fi

    source "$BASE_DIR/variables"
    return 0
}

if ! load_variables; then exit 1; fi

