#!/usr/bin/env bash

# Everything in this script is available to all script files

set -e

BASE_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

export PYTHON_VERSION=3.8.2
export POETRY_VERSION=1.1.15
export NODE_VERSION=14.18.0
export GO_VERSION=1.19.5
export LOG_FILE="$BASE_DIR/debug.log"

info () {
    local cur_date
    cur_date=$(get_date)
    printf "\r%s [ \033[00;34m..\033[0m ] %s\n" "$cur_date" "$1"
}

user () {
    local cur_date
    cur_date=$(get_date)
    printf "\r%s [ \033[0;33m??\033[0m ] %s\n" "$cur_date" "$1"
}

success () {
    local cur_date
    cur_date=$(get_date)
    printf "\r\033[2K%s [ \033[00;32mOK\033[0m ] %s\n" "$cur_date" "$1"
}

fail () {
    local cur_date
    cur_date=$(get_date)
    printf "\r\033[2K%s [\033[0;31mFAIL\033[0m] %s\n" "$cur_date" "$1"
    exit 1
}

log_to_file () {
    local cur_date
    cur_date=$(get_date)
    printf "%s [ %s ] %s\n" "$cur_date" "$1" "$2" >> "$LOG_FILE"

}

get_date () {
    date +"%Y-%m-%dT%H:%M:%S%z"
}

run_command () {
    local pre_log=$1
    local post_log=$2
    shift; shift

    info "$pre_log"
    while [[ $# -gt 0 ]]; do
        if ! output=$(eval "$1" 2>&1); then
            fail "$output"
        fi
        shift
    done
    success "$post_log"
}
