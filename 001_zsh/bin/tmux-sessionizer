#!/usr/bin/env bash

if [[ $# -eq 1 ]]; then
    selected=$1
    # If this parent directory for the selected directory is a bare git repository,
    # prepend the parent directory to the selected directory.
    if ls "$selected/../.bare" > /dev/null 2>&1; then
        selected_name=$(basename "$(dirname "$selected")")/$(basename "$selected")
        selected_name=$(tr . _ <<< "$selected_name")
    else
        selected_name=$(basename "$selected" | tr . _)
    fi
else
    if [[ -f "$HOME/.projects" ]]; then
        while IFS=$'\n' read -r line; do default_locations+=("$line"); done < "$HOME/.projects"
    else
        default_locations=("Workspace")

        while IFS=$'\n' read -r line; do
            # If this directory is a bare git repository, get a list of all immediate sub-directories.
            if ls "$HOME/Workspace/$line"/.bare > /dev/null 2>&1; then
                while IFS=$'\n' read -r line2; do
                    default_locations+=("$line/$line2")
                done < <(find "$HOME/Workspace/$line" -mindepth 1 -maxdepth 1 -type d -not -name '.*' -printf "%f\n")
            else
                default_locations+=("$line")
            fi
        done < <(find "$HOME"/Workspace -mindepth 1 -maxdepth 1 -type d -printf "%f\n")

        # From: https://www.baeldung.com/linux/sort-bash-arrays
        readarray -td '' default_locations < <(printf '%s\0' "${default_locations[@]}" | sort -z)
        # shellcheck disable=SC2086
        printf "%s\n" "${default_locations[@]}" > "$HOME/.projects"
    fi

    current_session=$(tmux display-message -p | sed -e 's/^\[//' -e 's/\].*//')

    # Load all active sessions and sort them in most recently used order
    while IFS=$'\n' read -r session; do
        sessions+=("$session")
    done < <(tmux list-sessions -F '#{session_last_attached} #S' | grep -v " $current_session" | sort --numeric-sort --reverse | cut -d' ' -f2-)

    selected_locations=()
    for session in "${sessions[@]}"; do
        selected_locations+=("$session")
    done
    for location in "${default_locations[@]}"; do
        # If a location appears in the active sessions, we skip it
        # shellcheck disable=SC2076
        if [[ " ${sessions[*]} " =~ " $location " ]]; then
            continue
        fi

        selected_locations+=("$location")
    done

    # shellcheck disable=SC2086
    selected=$(printf "%s\n" "${selected_locations[@]}" | "$HOME"/.tmux/plugins/tmux-fzf/scripts/.fzf-tmux --header='Select target session.' $TMUX_FZF_OPTIONS)
    selected_name=$(echo "$selected" | tr . _)
    if [[ -n $selected ]]; then
        selected="$HOME/Workspace/$selected"
    fi
fi

if [[ -z $selected ]]; then
    exit 0
fi

tmux_running=$(pgrep tmux)

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    tmux new-session -s "$selected_name" -c "$selected"
    exit 0
fi

if ! tmux has-session -t="$selected_name" 2> /dev/null; then
    tmux new-session -ds "$selected_name" -c "$selected"
fi

tmux switch-client -t "$selected_name"
