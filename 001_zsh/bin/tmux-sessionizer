#!/usr/bin/env bash

set -o pipefail

if [[ $# -gt 0 ]]; then
    selected=$1; shift

    # If selected is a default session, use the default session value
    if output=$(grep "$selected\$" "$HOME/.tmux-default-sessions" | head -n 1); then
        selected=$output
        selected_session=$(tr . _ <<< "$selected")
    elif ls "$selected/../.bare" > /dev/null 2>&1; then
        # If this parent directory for the selected directory is a bare git repository,
        # prepend the parent directory to the selected directory.
        selected_session=$(basename "$(dirname "$selected")")/$(basename "$selected")
        selected_session=$(tr . _ <<< "$selected_session")
    else
        selected_session=$(basename "$selected" | tr . _)
    fi
else
    current_session=$(tmux display-message -p | sed -e 's/^\[//' -e 's/\].*//')

    if [[ ! -f "$HOME/.projects" ]]; then
        update-projects
    fi

    while IFS=$'\n' read -r line; do default_sessions+=("$line"); done < <(grep -v "$current_session" < "$HOME/.projects")

    sessions=()

    # Load all active sessions and sort them in most recently used order
    while IFS=$'\n' read -r session; do
        sessions+=("$session")
    done < <(tmux list-sessions -F '#{session_last_attached} #S' | grep -v " $current_session" | sort --numeric-sort --reverse | cut -d' ' -f2-)

    for session in "${default_sessions[@]}"; do
        # If a location appears in the active sessions, we skip it
        # shellcheck disable=SC2076
        if [[ " ${sessions[*]} " =~ " $session " ]]; then
            continue
        fi

        sessions+=("$session")
    done

    # shellcheck disable=SC2086
    selected=$(printf "%s\n" "${sessions[@]}" | "$HOME"/.tmux/plugins/tmux-fzf/scripts/.fzf-tmux --header='Select target session.' $TMUX_FZF_OPTIONS)
    selected_session=$selected
    selected=$(tr _ . <<< "$selected")

    # If this is a relative path, prepend it with ~/Workspace/
    if [[ -n $selected ]] && [[ "${selected:0:1}" != "/" ]]; then
        selected="$HOME/Workspace/$selected"
    fi
fi

if [[ -z $selected ]]; then
    exit 0
fi

tmux_running=$(pgrep tmux)

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    tmux new-session -s "$selected_session" -c "$selected"
    exit 0
fi

if ! tmux has-session -t="$selected_session" 2> /dev/null; then
    tmux new-session -ds "$selected_session" -c "$selected"
fi

if [[ $# -gt 0 ]]; then
    window_name="$1"; shift
    tmux new-window -c "#{pane_current_path}" -n "$window_name" -t "$selected_session": "$*"
fi

tmux switch-client -t "$selected_session"
