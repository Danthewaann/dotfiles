#!/bin/bash

set -e 

branch_name="$1"; shift

if [[ -z $branch_name ]]; then
    >&2 echo "ERROR: must provide a branch name"
    exit 1
fi

# Remove the first path segment if branch name contains forward slashes
trimmed_name=$(echo "$branch_name" | cut -d'/' -f2-)

# Convert all forward slashes to dashes
converted_name=${trimmed_name//\//-}

# Create a new worktree using the converted name
git worktree add "$converted_name" "$@"

# Enter the new worktree
cd "$converted_name" || exit

# Attempt to rename worktree branch to use the correct branch name
if ! output=$(git branch -m "$branch_name" 2>&1); then
    # If the branch name already exists, check it out instead of creating it
    if [[ $output == *"already exists"* ]]; then
        >&2 echo "Branch '$branch_name' already exists"
        git checkout "$branch_name"
    fi
fi

# Post checkout setup
if [[ -f "poetry.lock" ]]; then
    >&2 echo
    >&2 echo "========================"
    >&2 echo "Running poetry install"
    >&2 echo "========================"
    >&2 echo
    poetry install
fi

if [[ -f "pyproject.toml" ]] && [[ -f "$HOME/pyrightconfig.json" ]]; then
    >&2 echo
    >&2 echo "==============================="
    >&2 echo "Linking pyrightconfig.json file"
    >&2 echo "==============================="
    >&2 echo
    ln -s "$HOME/pyrightconfig.json" "pyrightconfig.json"
fi

