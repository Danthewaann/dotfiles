#!/usr/bin/env bash

set -uoe pipefail

CUR_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

source "$CUR_DIR/_git-common"

args=()

function usage() {
    gh pr edit --help
}

while [[ $# -gt 0 ]]; do
    case $1 in
    -h|--help)
        usage
        exit 2
        ;;
    *)
        args+=("$1")
        shift
        ;;
    esac
done

cur_time=$(date +%s)
old_pr_file_name=git-pr-edit."$cur_time".old.md
new_pr_file_name=git-pr-edit."$cur_time".new.md

content=$(gh pr view --json title --json body)
title=$(echo "$content" | jq -r .title)
body=$(echo "$content" | jq -r .body)
echo -e "$title\n" > "$old_pr_file_name"
echo "$body" >> "$old_pr_file_name"
echo -e "$title\n" > "$new_pr_file_name"
echo "$body" >> "$new_pr_file_name"

old_file_md5=$(md5 -q "$old_pr_file_name")

$EDITOR "$new_pr_file_name"

new_file_md5=$(md5 -q "$new_pr_file_name")

if [[ "$old_file_md5" == "$new_file_md5" ]]; then
    >&2 echo "No updates submitted!"
    rm -f "$old_pr_file_name"
    rm -f "$new_pr_file_name"
    exit 1
fi

new_title=$(head -n 1 < "$new_pr_file_name")
new_content=$(sed -e "1,2d" < "$new_pr_file_name")

gh pr edit \
    --title "$new_title" \
    --body "$new_content" \
    "${args[@]}" || exit $?

rm -f "$old_pr_file_name"
rm -f "$new_pr_file_name"
