#!/usr/bin/env bash

set -uoe pipefail

CUR_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

source "$CUR_DIR/_git-common"

args=()

# Github label to slack emoji associate array
declare -A pr_types=(
    [python]="python"
    [ruby]="ruby_prog"
    [go]="go"
    [docker]="docker"
    [documentation]="docs"
)

pr_type=
pr_title=
pr_is_draft=0
labels=()

function usage() {
    gh pr edit --help
}

function pr_info() {
    url=$(gh pr view --json body --jq .body)

    slack_label=${pr_types[$pr_type]}

    if [[ $pr_is_draft -ne 0 ]]; then
        output=$(printf "%s\n:point_up: :%s: [Draft PR] %s\n" "$url" "$slack_label" "$pr_title")
    else
        output=$(printf "%s\n:point_up: :%s: %s\n" "$url" "$slack_label" "$pr_title")
    fi

    >&2 printf "\nThe below has been copied to your clipboard! ðŸ“‹\n\n"
    echo "$output"
    echo "$output" | pbcopy
}

while [[ $# -gt 0 ]]; do
    case $1 in
    -h|--help)
        usage
        exit 2
        ;;
    *)
        args+=("$1")
        shift
        ;;
    esac
done

cur_time=$(date +%s)
pr_file_name=git-pr-edit."$cur_time".md

gh pr view --json body --jq .body > "$pr_file_name"
old_file_md5=$(md5sum "$pr_file_name")

$EDITOR "$pr_file_name"

new_file_md5=$(md5sum "$pr_file_name")

if [[ "$old_file_md5" == "$new_file_md5" ]]; then
    rm -f "$pr_file_name"
    exit 1
fi

gh pr edit \
    --body-file - \
    "${args[@]}" || exit $?

# rm -f "$pr_file_name"
