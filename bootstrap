#!/usr/bin/env bash
#
# bootstrap stuff.

set -e

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

source "$SCRIPT_DIR"/common

setup_gitconfig () {
    if ! [[ -f "$SCRIPT_DIR"/001_git/.gitconfig ]]; then
        info 'setup gitconfig'

        git_credential='cache'
        if [ "$(uname -s)" == "Darwin" ]; then
            git_credential='osxkeychain'
        fi

        user ' - What is your github author name?'
        read -r -e git_authorname
        user ' - What is your github author email?'
        read -r -e git_authoremail

        sed -e "s/AUTHORNAME/$git_authorname/g" \
            -e "s/AUTHOREMAIL/$git_authoremail/g" \
            -e "s/GIT_CREDENTIAL_HELPER/$git_credential/g" \
            "$SCRIPT_DIR"/001_git/.gitconfig.example > "$SCRIPT_DIR"/001_git/.gitconfig

        success 'gitconfig'
    fi
}

install_symlinks () {
    info "running symlinks : output logged to $LOG_FILE" | tee -a "$LOG_FILE"

    local overwrite_all=false backup_all=false skip_all=false

    symlinks=()
    while IFS=" " read -r line; do symlinks+=("$line"); done < <(find -H "$SCRIPT_DIR" -maxdepth 2 -name 'symlink.sh' | sort)

    for symlink in "${symlinks[@]}"; do
        info ""
        info "running symlink $symlink" | tee -a "$LOG_FILE"
        info "==========================================="
        info ""
        if ! sh -c "$symlink" | tee -a "$LOG_FILE" 2>&1; then
            fail "failed to run symlink $symlink" | tee -a "$LOG_FILE"
        else
            success "finished symlink $symlink" | tee -a "$LOG_FILE"
            info "==========================================="
        fi
    done
}

echo ''

setup_gitconfig
install_symlinks

echo ''
echo 'All bootstrapped!'
