unbind r
bind r source-file ~/.tmux.conf

set -g prefix C-s
set -g renumber-windows on

# Use non-login shells
# From: https://wiki.archlinux.org/title/tmux#Start_a_non-login_shell
set -g default-command "${SHELL}"

# NOTE: focus-events seems to cause the `I` bug for fzf
# stuff within vim, that is why I have disabled it here
# set -g focus-events on

# Act like vim
setw -g mode-keys vi
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# Kill window and panes without confirmation
bind-key & kill-window
bind-key a kill-window -a
bind-key o kill-pane -a
bind-key q kill-session

# Go to the right-most window
bind-key 0 select-window -t '{end}'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'odedlaz/tmux-onedark-theme'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Automatically restore tmux windows when tmux starts.
set -g @continuum-restore 'on'

# Don't auto-launch tmx at machine boot.  Give me a chance to gcert first.
set -g @continuum-boot 'off'

# Preserves what was readable in each pane.
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session'

# If using MacVim this is needed to be able to restore vim sessions
if-shell '[[ $(uname -s) = Darwin ]]' {
    set -g @resurrect-processes '"~Vim->vim"'
}

# Move the statusline to the top
set -g status-position top

# Allow home and end keys to work
# From https://stackoverflow.com/a/55616731
bind-key -n Home send Escape "OH"
bind-key -n End send Escape "OF"

# Needed to ensure tmux uses 256 colours
# From https://wiki.archlinux.org/title/tmux#256_colors
# Also https://www.reddit.com/r/vim/comments/75zvux/why_is_vim_background_different_inside_tmux/
set -g default-terminal "xterm-256color"
set -ag terminal-overrides ",xterm-256color:Tc"

# Set tab names to be the current working directory
set-option -g status-interval 5
set-option -g automatic-rename on
set-option -g automatic-rename-format '#(echo "#{pane_current_path}" | rev | cut -d'/' -f-2 | rev)'

# Mouse mode to alter windows
setw -g mouse on

# Start window numbers at 1
set -g base-index 1

# Set easier window split keys
bind \" split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}" -p 35
bind h split-window -v -c "#{pane_current_path}" -p 25

# Make sure new windows open using dir that tmux was launched in
bind c new-window -c '#{TMUX_CURRENT_DIR}'

# Set pane border status
set -g pane-border-status top
set -g pane-border-format ""

# Reduce <ESC> delay for vim inside tmux
set-option -sg escape-time 30

# Move current window position left/right
bind-key -r > swap-window -t :+1
bind-key -r < swap-window -t :-1

# Enter copy mode
bind x copy-mode

# Setup vim like yank binds
unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi v \
  send-keys -X begin-selection
bind-key -T copy-mode-vi 'C-v' \
  send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y \
  send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane \
  send-keys -X copy-pipe-and-cancel "pbcopy"

# From https://www.reddit.com/r/vim/comments/12eg832/is_there_a_way_to_have_vim_objects_in_tmux/
bind -T copy-mode-vi i switch-client -T copyModeMultiKey_i
bind -T copyModeMultiKey_i w send-keys -X select-word
bind -T copyModeMultiKey_i W send-keys -X clear-selection \; send-keys -X previous-space \; send-keys -X begin-selection \; send-keys -X next-space-end
bind -T copyModeMultiKey_i b send-keys -X clear-selection \; send-keys -X jump-to-backward '(' \; send-keys -X begin-selection \; send-keys -X jump-to-forward ')'
bind -T copyModeMultiKey_i ( send-keys -X clear-selection \; send-keys -X jump-to-backward '(' \; send-keys -X begin-selection \; send-keys -X jump-to-forward ')'
bind -T copyModeMultiKey_i ) send-keys -X clear-selection \; send-keys -X jump-to-backward '(' \; send-keys -X begin-selection \; send-keys -X jump-to-forward ')'
bind -T copyModeMultiKey_i B send-keys -X clear-selection \; send-keys -X jump-to-backward '{' \; send-keys -X begin-selection \; send-keys -X jump-to-forward '}'
bind -T copyModeMultiKey_i \{ send-keys -X clear-selection \; send-keys -X jump-to-backward '{' \; send-keys -X begin-selection \; send-keys -X jump-to-forward '}'
bind -T copyModeMultiKey_i \} send-keys -X clear-selection \; send-keys -X jump-to-backward '{' \; send-keys -X begin-selection \; send-keys -X jump-to-forward '}'
bind -T copyModeMultiKey_i [ send-keys -X clear-selection \; send-keys -X jump-to-backward '[' \; send-keys -X begin-selection \; send-keys -X jump-to-forward ']'
bind -T copyModeMultiKey_i ] send-keys -X clear-selection \; send-keys -X jump-to-backward '[' \; send-keys -X begin-selection \; send-keys -X jump-to-forward ']'
bind -T copyModeMultiKey_i < send-keys -X clear-selection \; send-keys -X jump-to-backward '<' \; send-keys -X begin-selection \; send-keys -X jump-to-forward '>'
bind -T copyModeMultiKey_i > send-keys -X clear-selection \; send-keys -X jump-to-backward '<' \; send-keys -X begin-selection \; send-keys -X jump-to-forward '>'
bind -T copyModeMultiKey_i ` send-keys -X clear-selection \; send-keys -X jump-to-backward '`' \; send-keys -X begin-selection \; send-keys -X jump-to-forward '`'
bind -T copyModeMultiKey_i \' send-keys -X clear-selection \; send-keys -X jump-to-backward "'" \; send-keys -X begin-selection \; send-keys -X jump-to-forward "'"
bind -T copyModeMultiKey_i \" send-keys -X clear-selection \; send-keys -X jump-to-backward '"' \; send-keys -X begin-selection \; send-keys -X jump-to-forward '"'
bind -T copyModeMultiKey_i l send-keys -X clear-selection \; send-keys -X back-to-indentation \; send-keys -X begin-selection \; send-keys -X end-of-line \; send-keys -X cursor-left \; send-keys -X other-end

# Make sure tmux keeps track of the correct cursor
# From https://stackoverflow.com/a/42118416
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
